{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sparsh Mahajan\\\\OneDrive\\\\Documents\\\\c progams\\\\.vscode\\\\.vscode\\\\backend\\\\expensetracker\\\\frontend\\\\src\\\\chart\\\\monthly-chart.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from 'react-chartjs-2';\nimport { useGlobalContext } from \"../context/globalcontext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nfunction Chart3(_ref) {\n  _s();\n  let {\n    date,\n    date3\n  } = _ref;\n  const [incomes, expenses] = useGlobalContext();\n  var total_monthlyincome = 0;\n  incomes.map(income => {\n    const {\n      _id,\n      title,\n      amount,\n      date,\n      Category,\n      note\n    } = income;\n    console.log(income);\n    var x = new Date(income.date);\n    if (x.valueOf() <= date.valueOf() && x.valueOf() >= date3.valueOf()) {\n      total_monthlyincome += income.amount;\n    }\n  });\n  var total_monthlyexpense = 0;\n  expenses.map(income => {\n    const {\n      _id,\n      title,\n      amount,\n      date,\n      Category,\n      note\n    } = income;\n    console.log(income);\n    var x = new Date(income.date);\n    if (x.valueOf() <= date.valueOf() && x.valueOf() >= date3.valueOf()) {\n      total_monthlyexpense += income.amount;\n    }\n  });\n  const data = {\n    labels: [\"income\", \"expense\"],\n    datasets: [{\n      label: 'total income this month',\n      data: total_monthlyincome,\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)'\n    }, {\n      label: 'Total expense this month',\n      data: total_monthlyexpense,\n      borderColor: 'rgb(53, 162, 235)',\n      backgroundColor: 'rgba(53, 162, 235, 0.5)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 1\n  }, this);\n}\n_s(Chart3, \"iIfXHJO5uXJq7LvPP9Ya5fe21ag=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Chart3;\nexport default Chart3;\nvar _c;\n$RefreshReg$(_c, \"Chart3\");","map":{"version":3,"names":["React","Chart","ChartJS","ArcElement","Tooltip","Legend","Bar","useGlobalContext","jsxDEV","_jsxDEV","register","Chart3","_ref","_s","date","date3","incomes","expenses","total_monthlyincome","map","income","_id","title","amount","Category","note","console","log","x","Date","valueOf","total_monthlyexpense","data","labels","datasets","label","borderColor","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sparsh Mahajan/OneDrive/Documents/c progams/.vscode/.vscode/backend/expensetracker/frontend/src/chart/monthly-chart.js"],"sourcesContent":["import React from \"react\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { useGlobalContext } from \"../context/globalcontext\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\n\r\nfunction Chart3({date , date3}){\r\n\r\n    const [incomes , expenses] = useGlobalContext()\r\n    var total_monthlyincome = 0  \r\n     \r\n         incomes.map((income) => {\r\n            const {_id, title, amount, date, Category, note} = income;\r\n            console.log(income)\r\n            var x = new Date(income.date)\r\n      \r\n      \r\n          if(x.valueOf()<=date.valueOf() && x.valueOf() >=date3.valueOf() ){\r\n          total_monthlyincome+=income.amount \r\n   \r\n    }})\r\n\r\n    var total_monthlyexpense= 0  \r\n     \r\n    expenses.map((income) => {\r\n       const {_id, title, amount, date, Category, note} = income;\r\n       console.log(income)\r\n       var x = new Date(income.date)\r\n \r\n \r\n     if(x.valueOf()<=date.valueOf() && x.valueOf() >=date3.valueOf() ){\r\n     total_monthlyexpense+=income.amount \r\n\r\n}})\r\n\r\n\r\n\r\n\r\n\r\n \r\n  const data = {\r\n    labels : [\"income\" , \"expense\"] ,\r\n  datasets: [\r\n    {\r\n      label: 'total income this month',\r\n      data: total_monthlyincome ,\r\n      borderColor: 'rgb(255, 99, 132)',\r\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n    },\r\n    {\r\n      label: 'Total expense this month',\r\n      data:  total_monthlyexpense,\r\n      borderColor: 'rgb(53, 162, 235)',\r\n      backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n    },\r\n  ],\r\n};\r\n\r\n  \r\n  \r\n  \r\n\r\n    return(\r\n      \r\n\r\n<Bar   data={data}/>\r\n    )\r\n}\r\n\r\nexport default Chart3"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,IAAIC,OAAO,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACxE,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,gBAAgB,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5DP,OAAO,CAACQ,QAAQ,CAACP,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAG7C,SAASM,MAAMA,CAAAC,IAAA,EAAgB;EAAAC,EAAA;EAAA,IAAf;IAACC,IAAI;IAAGC;EAAK,CAAC,GAAAH,IAAA;EAE1B,MAAM,CAACI,OAAO,EAAGC,QAAQ,CAAC,GAAGV,gBAAgB,CAAC,CAAC;EAC/C,IAAIW,mBAAmB,GAAG,CAAC;EAEtBF,OAAO,CAACG,GAAG,CAAEC,MAAM,IAAK;IACrB,MAAM;MAACC,GAAG;MAAEC,KAAK;MAAEC,MAAM;MAAET,IAAI;MAAEU,QAAQ;MAAEC;IAAI,CAAC,GAAGL,MAAM;IACzDM,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;IACnB,IAAIQ,CAAC,GAAG,IAAIC,IAAI,CAACT,MAAM,CAACN,IAAI,CAAC;IAG/B,IAAGc,CAAC,CAACE,OAAO,CAAC,CAAC,IAAEhB,IAAI,CAACgB,OAAO,CAAC,CAAC,IAAIF,CAAC,CAACE,OAAO,CAAC,CAAC,IAAGf,KAAK,CAACe,OAAO,CAAC,CAAC,EAAE;MACjEZ,mBAAmB,IAAEE,MAAM,CAACG,MAAM;IAExC;EAAC,CAAC,CAAC;EAEH,IAAIQ,oBAAoB,GAAE,CAAC;EAE3Bd,QAAQ,CAACE,GAAG,CAAEC,MAAM,IAAK;IACtB,MAAM;MAACC,GAAG;MAAEC,KAAK;MAAEC,MAAM;MAAET,IAAI;MAAEU,QAAQ;MAAEC;IAAI,CAAC,GAAGL,MAAM;IACzDM,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;IACnB,IAAIQ,CAAC,GAAG,IAAIC,IAAI,CAACT,MAAM,CAACN,IAAI,CAAC;IAG/B,IAAGc,CAAC,CAACE,OAAO,CAAC,CAAC,IAAEhB,IAAI,CAACgB,OAAO,CAAC,CAAC,IAAIF,CAAC,CAACE,OAAO,CAAC,CAAC,IAAGf,KAAK,CAACe,OAAO,CAAC,CAAC,EAAE;MACjEC,oBAAoB,IAAEX,MAAM,CAACG,MAAM;IAExC;EAAC,CAAC,CAAC;EAOD,MAAMS,IAAI,GAAG;IACXC,MAAM,EAAG,CAAC,QAAQ,EAAG,SAAS,CAAC;IACjCC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,yBAAyB;MAChCH,IAAI,EAAEd,mBAAmB;MACzBkB,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE;IACnB,CAAC,EACD;MACEF,KAAK,EAAE,0BAA0B;MACjCH,IAAI,EAAGD,oBAAoB;MAC3BK,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAMG,oBAGJ5B,OAAA,CAACH,GAAG;IAAG0B,IAAI,EAAEA;EAAK;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEpB;AAAC5B,EAAA,CA7DQF,MAAM;EAAA,QAEkBJ,gBAAgB;AAAA;AAAAmC,EAAA,GAFxC/B,MAAM;AA+Df,eAAeA,MAAM;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}