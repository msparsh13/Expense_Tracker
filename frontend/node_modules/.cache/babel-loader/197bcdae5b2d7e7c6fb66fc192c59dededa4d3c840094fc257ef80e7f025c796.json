{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sparsh Mahajan\\\\OneDrive\\\\Documents\\\\c progams\\\\.vscode\\\\.vscode\\\\backend\\\\expensetracker\\\\frontend\\\\src\\\\transactions.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport ReactDatePicker from \"react-datepicker\";\nimport { useGlobalContext } from \"./context/globalcontext\";\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useState } from \"react\";\nimport { Chart } from \"chart.js\";\nimport axios from \"axios\";\nimport Item from \"./incomeitem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Transactions() {\n  _s();\n  const {\n    incomes,\n    expenses\n  } = useGlobalContext();\n\n  //i can just check for all income and expenses \n  var date = new Date();\n  var date2 = new Date(date.getFullYear(), date.getMonth(), 1);\n  var date1 = new Date();\n  function MonthlyIncome(income, date1, date2) {\n    if (income.date >= date1 && income.date <= date2) {\n      return income;\n    }\n  }\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    console.log(history.filter(MonthlyIncome));\n  };\n  transactionHistory();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [incomes.forEach(element => {\n      var x = new Date(element.date);\n      console.log(x.valueOf());\n      if (x.valueOf() < date1.valueOf() && x.valueOf() > date2.valueOf()) {\n        console.log(element);\n      }\n    }) /*map them to chart and income item*/, expenses.forEach(element => {\n      var x = new Date(element.date);\n      console.log(x.valueOf());\n      if (x.valueOf() < date1.valueOf() && x.valueOf() > date2.valueOf()) {\n        const {\n          _id,\n          title,\n          amount,\n          date,\n          Category,\n          note\n        } = element;\n        return /*#__PURE__*/_jsxDEV(Item, {\n          id: _id,\n          title: title,\n          note: note,\n          amount: amount,\n          date: date,\n          Category: Category\n        }, _id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 12\n        }, this);\n      }\n    })]\n  }, void 0, true);\n}\n_s(Transactions, \"Ob30RFptahZZgYNFjp5wRsA6l7M=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","ReactDatePicker","useGlobalContext","useState","Chart","axios","Item","jsxDEV","_jsxDEV","Fragment","_Fragment","Transactions","_s","incomes","expenses","date","Date","date2","getFullYear","getMonth","date1","MonthlyIncome","income","transactionHistory","history","console","log","filter","children","forEach","element","x","valueOf","_id","title","amount","Category","note","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sparsh Mahajan/OneDrive/Documents/c progams/.vscode/.vscode/backend/expensetracker/frontend/src/transactions.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport { useGlobalContext } from \"./context/globalcontext\";\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { useState } from \"react\";\r\nimport { Chart } from \"chart.js\";\r\nimport axios from \"axios\";\r\nimport Item from \"./incomeitem\";\r\n\r\n export default function Transactions(){\r\n\r\n    const {incomes , expenses} = useGlobalContext() ;\r\n    \r\n      //i can just check for all income and expenses \r\n      var date = new Date();\r\n      var date2 = new Date(date.getFullYear(), date.getMonth(), 1);\r\n      var date1= new Date() ;\r\n      \r\n\r\n\r\n\r\n      function MonthlyIncome(income , date1 , date2){\r\n        if(income.date>=date1 && income.date<=date2){\r\n         return income\r\n        }\r\n       }\r\n\r\n      const transactionHistory = () => {\r\n        const history = [...incomes, ...expenses]\r\n        console.log(history.filter(MonthlyIncome))\r\n}\r\n\r\n   transactionHistory()\r\n      return (<>\r\n    \r\n {incomes.forEach(element => {\r\n  var x = new Date(element.date)\r\n  console.log(x.valueOf())\r\n  if(x.valueOf()<date1.valueOf() && x.valueOf() >date2.valueOf()){\r\n    console.log(element) ;\r\n  }\r\n })/*map them to chart and income item*/ }\r\n \r\n\r\n{expenses.forEach(element => {\r\n  var x = new Date(element.date)\r\n  console.log(x.valueOf())\r\n  if(x.valueOf()<date1.valueOf() && x.valueOf() >date2.valueOf()){\r\n    const {_id, title, amount, date, Category, note} = element;\r\n    return <Item\r\n        key={_id}\r\n        id={_id} \r\n        title={title} \r\n        note ={note}\r\n        amount={amount} \r\n        date={date} \r\n        Category={Category} />\r\n}\r\n  \r\n })}\r\n    \r\n  \r\n \r\n</>\r\n      )\r\n    }\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}