{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sparsh Mahajan\\\\OneDrive\\\\Documents\\\\c progams\\\\.vscode\\\\.vscode\\\\backend\\\\expensetracker\\\\frontend\\\\src\\\\transactions.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport ReactDatePicker from \"react-datepicker\";\nimport { useGlobalContext } from \"./context/globalcontext\";\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useState } from \"react\";\nimport { Chart } from \"chart.js\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport Item from \"./incomeitem\";\nimport { Chart2 } from \"./chart/chart2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const arr = new Array();\nexport default function Transactions() {\n  _s();\n  const {\n    incomes,\n    expenses,\n    getIncomes,\n    deleteIncome,\n    state\n  } = useGlobalContext();\n\n  //i can just check for all income and expenses \n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"income-list\",\n      children: state.map(income => {\n        const {\n          _id,\n          title,\n          amount,\n          date,\n          Category,\n          note\n        } = income;\n        console.log(income);\n        return /*#__PURE__*/_jsxDEV(Item, {\n          id: _id,\n          title: title,\n          note: note,\n          amount: amount,\n          date: date,\n          Category: Category,\n          deleteItem: deleteIncome\n        }, _id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 14\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Chart2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n} //things to do now map it to chart\n_s(Transactions, \"qX1b1z35VsZNzmDkzDn+DnXcw58=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","ReactDatePicker","useGlobalContext","useState","Chart","axios","useEffect","Item","Chart2","jsxDEV","_jsxDEV","Fragment","_Fragment","arr","Array","Transactions","_s","incomes","expenses","getIncomes","deleteIncome","state","children","className","map","income","_id","title","amount","date","Category","note","console","log","id","deleteItem","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sparsh Mahajan/OneDrive/Documents/c progams/.vscode/.vscode/backend/expensetracker/frontend/src/transactions.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport { useGlobalContext } from \"./context/globalcontext\";\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { useState } from \"react\";\r\nimport { Chart } from \"chart.js\";\r\nimport axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport Item from \"./incomeitem\";\r\nimport { Chart2 } from \"./chart/chart2\";\r\n\r\n\r\nexport const arr = new Array();\r\n\r\n export default function Transactions(){\r\n\r\n    const {incomes , expenses , getIncomes , deleteIncome , state} = useGlobalContext() ;\r\n   \r\n    \r\n      //i can just check for all income and expenses \r\n     \r\n\r\n      \r\n      return (<>\r\n    \r\n  <div className='income-list'>\r\n    {state.map((income) => {\r\n      const {_id, title, amount, date, Category, note} = income;\r\n      console.log(income)\r\n      return <Item\r\n          key={_id}\r\n          id={_id} \r\n          title={title} \r\n          note ={note}\r\n          amount={amount} \r\n          date={date} \r\n          Category={Category} \r\n          deleteItem={deleteIncome}\r\n      />\r\n  })}\r\n</div>\r\n\r\n<Chart2/>\r\n    \r\n  \r\n \r\n</>\r\n      )\r\n    } //things to do now map it to chart\r\n  "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,kBAAkB;AAC9C,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,OAAO,4CAA4C;AACnD,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,KAAK,QAAQ,UAAU;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,MAAM,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGxC,OAAO,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;AAE7B,eAAe,SAASC,YAAYA,CAAA,EAAE;EAAAC,EAAA;EAEnC,MAAM;IAACC,OAAO;IAAGC,QAAQ;IAAGC,UAAU;IAAGC,YAAY;IAAGC;EAAK,CAAC,GAAGnB,gBAAgB,CAAC,CAAC;;EAGjF;;EAIA,oBAAQQ,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBAEZZ,OAAA;MAAKa,SAAS,EAAC,aAAa;MAAAD,QAAA,EACzBD,KAAK,CAACG,GAAG,CAAEC,MAAM,IAAK;QACrB,MAAM;UAACC,GAAG;UAAEC,KAAK;UAAEC,MAAM;UAAEC,IAAI;UAAEC,QAAQ;UAAEC;QAAI,CAAC,GAAGN,MAAM;QACzDO,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC;QACnB,oBAAOf,OAAA,CAACH,IAAI;UAER2B,EAAE,EAAER,GAAI;UACRC,KAAK,EAAEA,KAAM;UACbI,IAAI,EAAGA,IAAK;UACZH,MAAM,EAAEA,MAAO;UACfC,IAAI,EAAEA,IAAK;UACXC,QAAQ,EAAEA,QAAS;UACnBK,UAAU,EAAEf;QAAa,GAPpBM,GAAG;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQX,CAAC;MACN,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN7B,OAAA,CAACF,MAAM;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAIP,CAAC;AAEC,CAAC,CAAC;AAAAvB,EAAA,CAlCmBD,YAAY;EAAA,QAEgCb,gBAAgB;AAAA;AAAAsC,EAAA,GAF5DzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}