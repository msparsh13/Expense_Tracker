{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport ReactDatePicker from \"react-datepicker\";\nimport { useGlobalContext } from \"./context/globalcontext\";\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Transactions() {\n  _s();\n  const {\n    incomes,\n    expenses\n  } = useGlobalContext();\n\n  //i can just check for all income and expenses \n  var date = new Date();\n  var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n  var today = new Date();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(firstDay), console.log(today)]\n  }, void 0, true);\n}\n_s(Transactions, \"Ob30RFptahZZgYNFjp5wRsA6l7M=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","ReactDatePicker","useGlobalContext","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","Transactions","_s","incomes","expenses","date","Date","firstDay","getFullYear","getMonth","today","children","console","log","_c","$RefreshReg$"],"sources":["C:/Users/Sparsh Mahajan/OneDrive/Documents/c progams/.vscode/.vscode/backend/expensetracker/frontend/src/transactions.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport { useGlobalContext } from \"./context/globalcontext\";\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { useState } from \"react\";\r\n\r\n\r\n export default function Transactions(){\r\n\r\n    const {incomes , expenses} = useGlobalContext() ;\r\n    \r\n      //i can just check for all income and expenses \r\n      var date = new Date();\r\n      var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\r\n      var today = new Date() ;\r\n      \r\n\r\n     \r\n\r\n\r\n      return (<>\r\n    \r\n    {console.log(firstDay)}\r\n    {console.log(today)}\r\n  \r\n \r\n</>\r\n      )\r\n    }\r\n  "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,kBAAkB;AAC9C,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,OAAO,4CAA4C;AACnD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGhC,eAAe,SAASC,YAAYA,CAAA,EAAE;EAAAC,EAAA;EAEnC,MAAM;IAACC,OAAO;IAAGC;EAAQ,CAAC,GAAGT,gBAAgB,CAAC,CAAC;;EAE7C;EACA,IAAIU,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;EACrB,IAAIC,QAAQ,GAAG,IAAID,IAAI,CAACD,IAAI,CAACG,WAAW,CAAC,CAAC,EAAEH,IAAI,CAACI,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D,IAAIC,KAAK,GAAG,IAAIJ,IAAI,CAAC,CAAC;EAMtB,oBAAQN,OAAA,CAAAF,SAAA;IAAAa,QAAA,GAETC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC,EACrBK,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EAAA,eAGrB,CAAC;AAEC;AAACR,EAAA,CArBoBD,YAAY;EAAA,QAEJN,gBAAgB;AAAA;AAAAmB,EAAA,GAFxBb,YAAY;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}