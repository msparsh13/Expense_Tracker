{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sparsh Mahajan\\\\OneDrive\\\\Documents\\\\c progams\\\\.vscode\\\\.vscode\\\\backend\\\\expensetracker\\\\frontend\\\\src\\\\transactions\\\\transactions.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport ReactDatePicker from \"react-datepicker\";\nimport { useGlobalContext } from \"../context/globalcontext\";\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useState } from \"react\";\nimport { Chart } from \"chart.js\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport Item from \"../income/incomeitem\";\nimport { Chart2 } from \"../chart/chart-income\";\nimport Chart3 from \"../chart/monthly-chart\";\nimport './transaction.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Transactions() {\n  _s();\n  const {\n    incomes,\n    expenses,\n    getIncomes,\n    deleteIncome\n  } = useGlobalContext();\n  useEffect(() => {\n    getIncomes();\n  }, []);\n  var date = new Date();\n  var date2 = new Date(date.getFullYear(), date.getMonth(), 1);\n  var date1 = new Date();\n\n  //i can just check for all income and expenses \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thismonth\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 3\n      }, this), incomes.map(income => {\n        const {\n          _id,\n          title,\n          amount,\n          date,\n          Category,\n          note\n        } = income;\n        console.log(income);\n        var x = new Date(income.date);\n        if (x.valueOf() <= date1.valueOf() && x.valueOf() >= date2.valueOf()) {\n          return /*#__PURE__*/_jsxDEV(Item, {\n            id: _id,\n            title: title,\n            note: note,\n            amount: amount,\n            date: date,\n            Category: Category,\n            deleteItem: deleteIncome\n          }, _id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 14\n          }, this);\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), expenses.map(i => {\n        const {\n          _id,\n          title,\n          amount,\n          date,\n          Category,\n          note\n        } = i;\n        var x = new Date(i.date);\n        if (x.valueOf() <= date1.valueOf() && x.valueOf() >= date2.valueOf()) {\n          return /*#__PURE__*/_jsxDEV(Item, {\n            id: _id,\n            title: title,\n            note: note,\n            amount: amount,\n            date: date,\n            Category: Category,\n            deleteItem: deleteIncome\n          }, _id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 14\n          }, this);\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monthlychart\",\n      children: /*#__PURE__*/_jsxDEV(Chart3, {\n        date: date1,\n        date3: date2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 15\n  }, this);\n} //things to do now map it to chart\n_s(Transactions, \"ZxTkcHwrFdQHWbGL6ACAdLtm5nk=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","ReactDatePicker","useGlobalContext","useState","Chart","axios","useEffect","Item","Chart2","Chart3","jsxDEV","_jsxDEV","Transactions","_s","incomes","expenses","getIncomes","deleteIncome","date","Date","date2","getFullYear","getMonth","date1","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","income","_id","title","amount","Category","note","console","log","x","valueOf","id","deleteItem","i","date3","_c","$RefreshReg$"],"sources":["C:/Users/Sparsh Mahajan/OneDrive/Documents/c progams/.vscode/.vscode/backend/expensetracker/frontend/src/transactions/transactions.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport { useGlobalContext } from \"../context/globalcontext\";\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { useState } from \"react\";\r\nimport { Chart } from \"chart.js\";\r\nimport axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport Item from \"../income/incomeitem\";\r\nimport { Chart2 } from \"../chart/chart-income\";\r\nimport Chart3 from \"../chart/monthly-chart\";\r\nimport './transaction.css'\r\n\r\n export default function Transactions(){\r\n\r\n\r\n    const {incomes , expenses , getIncomes , deleteIncome} = useGlobalContext() ;\r\n       useEffect(() =>{\r\n        getIncomes()\r\n    }, [])\r\n\r\n    var date = new Date();\r\n      var date2 = new Date(date.getFullYear(), date.getMonth(), 1);\r\n      var date1= new Date() ;\r\n    \r\n      //i can just check for all income and expenses \r\n\r\n      \r\n      return (<div className=\"thismonth\">\r\n    \r\n  <div className='list'>\r\n   \r\n  <h2>Income</h2>\r\n\r\n\r\n     { incomes.map((income) => {\r\n      const {_id, title, amount, date, Category, note} = income;\r\n      console.log(income)\r\n      var x = new Date(income.date)\r\n\r\n\r\n    if(x.valueOf()<=date1.valueOf() && x.valueOf() >=date2.valueOf() ){\r\n      return <Item\r\n          key={_id}\r\n          id={_id} \r\n          title={title} \r\n          note ={note}\r\n          amount={amount} \r\n          date={date} \r\n          Category={Category} \r\n          deleteItem={deleteIncome} \r\n      />\r\n  }})}\r\n</div>\r\n    \r\n  <div className=\"list\">\r\n    <h2>Expenses</h2>\r\n  { expenses.map((i) => {\r\n      const {_id, title, amount, date, Category, note} = i;\r\n      \r\n      var x = new Date(i.date)\r\n\r\n\r\n    if(x.valueOf()<=date1.valueOf() && x.valueOf() >=date2.valueOf() ){\r\n      return <Item\r\n          key={_id}\r\n          id={_id} \r\n          title={title} \r\n          note ={note}\r\n          amount={amount} \r\n          date={date} \r\n          Category={Category} \r\n          deleteItem={deleteIncome} \r\n      />\r\n  }})}\r\n  </div>\r\n\r\n\r\n  <div className=\"monthlychart\">\r\n    <Chart3 date={date1} date3={date2}/>\r\n    </div>\r\n \r\n</div>\r\n      )\r\n    } //things to do now map it to chart\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}