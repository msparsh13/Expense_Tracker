{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sparsh Mahajan\\\\OneDrive\\\\Documents\\\\c progams\\\\.vscode\\\\.vscode\\\\backend\\\\expensetracker\\\\frontend\\\\src\\\\transactions.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport ReactDatePicker from \"react-datepicker\";\nimport { useGlobalContext } from \"./context/globalcontext\";\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useState } from \"react\";\nimport { Chart } from \"chart.js\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport Item from \"./income/incomeitem\";\nimport { Chart2 } from \"./chart/chart-income\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const arr = new Array();\nfunction monthlyinc(date1, date2, income) {\n  var x = new Date(income.date);\n  if (x.valueOf() <= date1.valueOf() && x.valueOf() >= date2.valueOf()) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport default function Transactions() {\n  _s();\n  const {\n    incomes,\n    expenses,\n    getIncomes,\n    deleteIncome\n  } = useGlobalContext();\n  useEffect(() => {\n    getIncomes();\n  }, []);\n  const [time, settime] = useState([]);\n  var date = new Date();\n  var date2 = new Date(date.getFullYear(), date.getMonth(), 1);\n  var date1 = new Date();\n\n  //i can just check for all income and expenses \n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"income-list\",\n      children: incomes.map(income => {\n        const {\n          _id,\n          title,\n          amount,\n          date,\n          Category,\n          note\n        } = income;\n        console.log(income);\n        if (monthlyinc(date1, date2, income) === true) {\n          return /*#__PURE__*/_jsxDEV(Item, {\n            id: _id,\n            title: title,\n            note: note,\n            amount: amount,\n            date: date,\n            Category: Category,\n            deleteItem: deleteIncome\n          }, _id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 14\n          }, this);\n        }\n        return;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-list\",\n      children: expenses.map(income => {\n        const {\n          _id,\n          title,\n          amount,\n          date,\n          Category,\n          note\n        } = income;\n        console.log(income);\n        if (monthlyinc(date1, date2, income) === true) {\n          return /*#__PURE__*/_jsxDEV(Item, {\n            id: _id,\n            title: title,\n            note: note,\n            amount: amount,\n            date: date,\n            Category: Category,\n            deleteItem: deleteIncome\n          }, _id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 14\n          }, this);\n        }\n        return;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n} //things to do now map it to chart\n_s(Transactions, \"Mxxcfv7fuG4yJBS3EMq4uE8QKgI=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","ReactDatePicker","useGlobalContext","useState","Chart","axios","useEffect","Item","Chart2","jsxDEV","_jsxDEV","Fragment","_Fragment","arr","Array","monthlyinc","date1","date2","income","x","Date","date","valueOf","Transactions","_s","incomes","expenses","getIncomes","deleteIncome","time","settime","getFullYear","getMonth","children","className","map","_id","title","amount","Category","note","console","log","id","deleteItem","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sparsh Mahajan/OneDrive/Documents/c progams/.vscode/.vscode/backend/expensetracker/frontend/src/transactions.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport { useGlobalContext } from \"./context/globalcontext\";\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { useState } from \"react\";\r\nimport { Chart } from \"chart.js\";\r\nimport axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport Item from \"./income/incomeitem\";\r\nimport { Chart2 } from \"./chart/chart-income\";\r\n\r\n\r\nexport const arr = new Array();\r\n\r\nfunction monthlyinc(date1 , date2 , income){\r\n \r\n    var x = new Date(income.date)\r\n\r\n\r\n if(x.valueOf()<=date1.valueOf() && x.valueOf() >=date2.valueOf() ){\r\n  return true \r\n}\r\nelse{\r\n  return false\r\n}}\r\n\r\n export default function Transactions(){\r\n\r\n\r\n    const {incomes , expenses , getIncomes , deleteIncome} = useGlobalContext() ;\r\n       useEffect(() =>{\r\n        getIncomes()\r\n    }, [])\r\n\r\n    const [time , settime] = useState([])\r\n    var date = new Date();\r\n      var date2 = new Date(date.getFullYear(), date.getMonth(), 1);\r\n      var date1= new Date() ;\r\n    \r\n      //i can just check for all income and expenses \r\n\r\n      \r\n      return (<>\r\n    \r\n  <div className='income-list'>\r\n   \r\n\r\n\r\n\r\n     { incomes.map((income) => {\r\n      const {_id, title, amount, date, Category, note} = income;\r\n      console.log(income)\r\n    if(monthlyinc(date1 , date2 , income)===true ){\r\n      return <Item\r\n          key={_id}\r\n          id={_id} \r\n          title={title} \r\n          note ={note}\r\n          amount={amount} \r\n          date={date} \r\n          Category={Category} \r\n          deleteItem={deleteIncome} \r\n      />\r\n  }\r\n  return })}\r\n</div>\r\n    \r\n  <div className=\"expense-list\">\r\n  { expenses.map((income) => {\r\n      const {_id, title, amount, date, Category, note} = income;\r\n      console.log(income)\r\n    if(monthlyinc(date1 , date2 , income)===true ){\r\n      return <Item\r\n          key={_id}\r\n          id={_id} \r\n          title={title} \r\n          note ={note}\r\n          amount={amount} \r\n          date={date} \r\n          Category={Category} \r\n          deleteItem={deleteIncome} \r\n      />\r\n  }\r\n  return })}\r\n  </div>\r\n \r\n</>\r\n      )\r\n    } //things to do now map it to chart\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}